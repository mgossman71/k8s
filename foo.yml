apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":"2019-06-20T23:19:23Z","generation":3,"labels":{"app":"sabnzb"},"name":"sabnzb-deployment","namespace":"default","resourceVersion":"530809","selfLink":"/apis/extensions/v1beta1/namespaces/default/deployments/sabnzb-deployment","uid":"d6c77c5b-93b1-11e9-a03f-005056bedc60"},"spec":{"progressDeadlineSeconds":600,"replicas":5,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"sabnzb"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"sabnzb"}},"spec":{"containers":[{"image":"linuxserver/sabnzbd","imagePullPolicy":"Always","name":"sabnzb","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
  creationTimestamp: "2019-06-20T23:19:23Z"
  generation: 4
  labels:
    app: sabnzb
  name: sabnzb-deployment
  namespace: default
  resourceVersion: "533665"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/sabnzb-deployment
  uid: d6c77c5b-93b1-11e9-a03f-005056bedc60
spec:
  progressDeadlineSeconds: 600
  replicas: 6
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sabnzb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sabnzb
    spec:
      containers:
      - image: linuxserver/sabnzbd
        imagePullPolicy: Always
        name: sabnzb
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
